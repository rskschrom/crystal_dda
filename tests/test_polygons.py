import numpy as np
from crystal_dda.polygons import Hexagon, Stellar, BranchedPlanar
import matplotlib.pyplot as plt

def test_hexagon():
    hx = Hexagon(1.)
    points = np.vstack((hx.x,hx.y))
    points_test = np.array([[1.,0.5,-0.5,-1.,-0.5,0.5,1.],
                           [0.,0.8660254,0.8660254,0.,-0.8660254,-0.8660254,0.]])
    diff = np.sum((points-points_test)**2.)
    assert diff<1.e-6
    
def test_size():
    hx = Hexagon(1.)
    dmax = hx.size()
    assert np.abs(dmax-2.)<1.e-6
    
def test_stellar():
    st = Stellar(0.3, 1.)
    points = np.vstack((st.x,st.y))
    points_test = np.array([[ 1.        ,  0.925     ,  0.225     ,  0.575     ,  0.5       ,
   0.35      ,  0.        , -0.35      , -0.5       , -0.575     ,
  -0.225     , -0.925     , -1.        , -0.925     , -0.225     ,
  -0.575     , -0.5       , -0.35      ,  0.        ,  0.35      ,
   0.5       ,  0.575     ,  0.225     ,  0.925     ,  1.        ],
 [ 0.        ,  0.12990381,  0.12990381,  0.73612159,  0.8660254 ,
   0.8660254 ,  0.25980762,  0.8660254 ,  0.8660254 ,  0.73612159,
   0.12990381,  0.12990381,  0.        , -0.12990381, -0.12990381,
  -0.73612159, -0.8660254 , -0.8660254 , -0.25980762, -0.8660254 ,
  -0.8660254 , -0.73612159, -0.12990381, -0.12990381,  0.        ]])
    
    diff = np.sum((points-points_test)**2.)
    assert diff<1.e-6
    
def test_branched_planar():
    bp = BranchedPlanar(0.5, 3., 0.3, 0.3, 0.4, 0.6, 4)
    points = np.vstack((bp.x,bp.y))
    
    points_test = np.array([[-2.50000000e-01, -6.87500000e-02, -8.43750000e-02, -0.00000000e+00,
  -0.00000000e+00,  0.00000000e+00,  8.43750000e-02,  6.87500000e-02,
   2.50000000e-01,  3.40625000e-01,  3.09375000e-01,  2.25000000e-01,
   2.25000000e-01,  2.25000000e-01,  3.93750000e-01,  4.09375000e-01,
   5.00000000e-01,  4.09375000e-01,  3.93750000e-01,  2.25000000e-01,
   2.25000000e-01,  2.25000000e-01,  3.09375000e-01,  3.40625000e-01,
   2.50000000e-01,  6.87500000e-02,  8.43750000e-02,  3.18172572e-17,
   3.18172572e-17,  3.18172572e-17, -8.43750000e-02, -6.87500000e-02,
  -2.50000000e-01, -3.40625000e-01, -3.09375000e-01, -2.25000000e-01,
  -2.25000000e-01, -2.25000000e-01, -3.93750000e-01, -4.09375000e-01,
  -5.00000000e-01, -4.09375000e-01, -3.93750000e-01, -2.25000000e-01,
  -2.25000000e-01, -2.25000000e-01, -3.09375000e-01, -3.40625000e-01,
  -2.50000000e-01],
 [ 4.33012702e-01,  4.33012702e-01,  4.05949408e-01,  2.59807621e-01,
   2.59807621e-01,  2.59807621e-01,  4.05949408e-01,  4.33012702e-01,
   4.33012702e-01,  2.76045597e-01,  2.76045597e-01,  1.29903811e-01,
   1.29903811e-01,  1.29903811e-01,  1.29903811e-01,  1.56967104e-01,
   5.55111512e-17, -1.56967104e-01, -1.29903811e-01, -1.29903811e-01,
  -1.29903811e-01, -1.29903811e-01, -2.76045597e-01, -2.76045597e-01,
  -4.33012702e-01, -4.33012702e-01, -4.05949408e-01, -2.59807621e-01,
  -2.59807621e-01, -2.59807621e-01, -4.05949408e-01, -4.33012702e-01,
  -4.33012702e-01, -2.76045597e-01, -2.76045597e-01, -1.29903811e-01,
  -1.29903811e-01, -1.29903811e-01, -1.29903811e-01, -1.56967104e-01,
  -2.49800181e-16,  1.56967104e-01,  1.29903811e-01,  1.29903811e-01,
   1.29903811e-01,  1.29903811e-01,  2.76045597e-01,  2.76045597e-01,
   4.33012702e-01]])
    diff = np.sum((points-points_test)**2.)
    assert diff<1.e-6
    
def plot_stellar():
    st = Stellar(0.3, 1.)
    points = np.vstack((st.x,st.y))
    print(np.array2string(points, separator=', '))
    
    plt.plot(st.x, st.y, 'k-')
    ax = plt.gca()
    ax.set_aspect(1.)
    plt.savefig('test.png')
    return

def plot_branched_planar():    
    bp = BranchedPlanar(0.5, 3., 0.3, 0.3, 0.4, 0.6, 4)
    points = np.vstack((bp.x,bp.y))
    
    print(np.array2string(points, separator=', '))
    plt.plot(bp.x, bp.y, 'k-')
    ax = plt.gca()
    ax.set_aspect(1.)
    plt.savefig('test.png')
    return
